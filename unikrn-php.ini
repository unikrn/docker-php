[PHP]
date.timezone = UTC

[MySQLi]
mysqli.allow_persistent = On
mysqli.max_links = -1
mysqli.cache_size = 2000
mysqli.reconnect = On

[xcache]
; ini only settings, all the values here is default unless explained

; select low level shm/allocator scheme implemenation
xcache.shm_scheme =        "mmap"
; to disable: xcache.size=0
; to enable : xcache.size=64M etc (any size > 0) and your system mmap allows
xcache.size  =                32M
; set to cpu count (cat /proc/cpuinfo |grep -c processor)
xcache.count =                 2
; just a hash hints, you can always store count(items) > slots
xcache.slots =                8K
; ttl of the cache item, 0=forever
xcache.ttl   =                 0
; interval of gc scanning expired items, 0=no scan, other values is in seconds
xcache.gc_interval =           0

; same as aboves but for variable cache
xcache.var_size  =            16M
xcache.var_count =            2
xcache.var_slots =            8K
; default ttl
xcache.var_ttl   =             7200
xcache.var_maxttl   =          0
xcache.var_gc_interval =     300

xcache.test =                Off
; N/A for /dev/zero
xcache.readonly_protection = Off
; for *nix, xcache.mmap_path is a file path, not directory.
; Use something like "/tmp/xcache" if you want to turn on ReadonlyProtection
; 2 group of php won't share the same /tmp/xcache
; for win32, xcache.mmap_path=anonymous map name, not file path
xcache.mmap_path =    "/dev/zero"


; leave it blank(disabled) or "/tmp/phpcore/"
; make sure it's writable by php (without checking open_basedir)
xcache.coredump_directory =   "/tmp/phpcore/"

; per request settings
xcache.cacher =               On
xcache.stat   =               On
xcache.optimizer =            On

;DEV ONLY!!
xcache.admin.enable_auth = Off

[apc]
apc.enabled=1
apc.max_file_size=200M
apc.user_ttl=7200
apc.ttl=7200
apc.rfc1867=0
apc.optimization=1
apc.shm_size=32M
apc.shm_segments=1
apc.enable_cli=0
apc.localcache=0
apc.cache_by_default=1
apc.slam_defense=0
apc.write_lock=1



